
import javax.swing.*;
import ConnectionPackage.ConnectionProvider;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.*;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.table.DefaultTableModel;
import org.jdom.CDATA;

import static java.lang.Integer.parseInt;


public class billing extends javax.swing.JFrame {

    private int finaltotal;
    private Queue<Integer> arrpid=new LinkedList<>();
    private Queue<Integer> arrquantity=new LinkedList<>();
    
    /**
     * Creates new form billing
     */
    public billing() {
        initComponents();
        this.setLocationRelativeTo(null);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField11.setEditable(false);
        jTextField12.setEditable(false);
        jTextField5.setEditable(false);
        jTextField7.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("./Images/billing.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 0, 68, 99));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("./Images/Billing ani.gif"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 279, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Date :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 100, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, 170, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Time :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 60, 110, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 60, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1160, 10));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Buyer Details : ");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Name :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, 20));

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 170, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Contact No : ");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, -1, -1));

        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, 180, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Email : ");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 160, -1, -1));

        jTextField3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 160, 220, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Address :");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 160, 71, -1));

        jTextField4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 160, 188, -1));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 1166, 10));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("Product Details : ");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 1170, 10));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setText("Product ID :");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        jTextField9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 71, -1));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Product Name :");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, -1, -1));

        jTextField10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 150, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Price (In Rs) :");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        jTextField11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 120, -1));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("Description :");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, -1, -1));

        jTextField12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, 270, -1));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setText("Quantity :");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 300, -1, -1));

        jTextField13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField13.setForeground(new java.awt.Color(153, 153, 153));
        jTextField13.setText("Enter Buying Quantity");
        jTextField13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField13FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 296, 200, 30));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("./Images/add.png"))); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 260, 140, 70));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Description", "Quantity", "Total"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 581, 180));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("Invoice Calculation :");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, 190, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Invoice Total : ");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 400, -1, -1));

        jTextField5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 400, 210, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Amount Paid : ");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 440, -1, -1));

        jTextField6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(153, 153, 153));
        jTextField6.setText("Enter the Amount Paid");
        jTextField6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField6FocusLost(evt);
            }
        });
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 440, 210, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Amount To Be Returned : ");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 480, 190, -1));

        jTextField7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 480, 210, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("./Images/save.png"))); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 400, 100, -1));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("./Images/Reset.png"))); // NOI18N
        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 440, -1, -1));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("./Images/close Jframe.png"))); // NOI18N
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 480, -1, -1));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("./Images/billing background.png"))); // NOI18N
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void clearProductFields() {
        jTextField10.setText("");
        jTextField11.setText("");
        jTextField12.setText("");
    }

    // Fixed ADD Button Action - Properly handles database queries and stock validation
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        String pidText = jTextField9.getText().trim();
        String quantityText = jTextField13.getText().trim();

        // Validate inputs
        if (pidText.isEmpty() || quantityText.isEmpty() || quantityText.equals("Enter Buying Quantity")) {
            JOptionPane.showMessageDialog(null, "Please enter Product ID and Quantity");
            return;
        }

        try {
            int pid = Integer.parseInt(pidText);
            int quantity = Integer.parseInt(quantityText);

            // Check stock availability with proper PreparedStatement
            String stockQuery = "SELECT quantity FROM product WHERE pid = ?";
            Connection con = ConnectionProvider.getcon();
            PreparedStatement pst = con.prepareStatement(stockQuery);
            pst.setInt(1, pid);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                int stockQuantity = rs.getInt("quantity");

                if (stockQuantity >= quantity) {
                    // Add to queues for later database insertion
                    arrpid.add(pid);
                    arrquantity.add(quantity);

                    // Calculate total
                    double price = Double.parseDouble(jTextField11.getText());
                    double total = price * quantity;

                    // Add to table
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.addRow(new Object[]{
                            jTextField10.getText(), // Product Name
                            price,                  // Price
                            jTextField12.getText(), // Description
                            quantity,               // Quantity
                            total                   // Total
                    });

                    // Update final total
                    finaltotal += total;
                    jTextField5.setText(String.valueOf(finaltotal));

                    // Clear product fields for next entry
                    jTextField9.setText("");
                    jTextField10.setText("");
                    jTextField11.setText("");
                    jTextField12.setText("");
                    jTextField13.setText("Enter Buying Quantity");
                    jTextField13.setForeground(new Color(153, 153, 153));

                } else {
                    JOptionPane.showMessageDialog(null,
                            "Insufficient stock! Available: " + stockQuantity + ", Requested: " + quantity);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Product not found with ID: " + pid);
            }

            rs.close();
            pst.close();
            con.close();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter valid numbers for Product ID and Quantity");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        String name=jTextField1.getText();
        String query="Select * from buyer where name like ? ";
        try
        {
            Connection con=ConnectionProvider.getcon();
            PreparedStatement pst=con.prepareStatement(query);
            pst.setString(1,name + "%" );
            ResultSet rs=pst.executeQuery();
            if(rs.next())
            {
                jTextField1.setText(rs.getString("Name"));
                jTextField2.setText(rs.getString("contact"));
                jTextField3.setText(rs.getString("Email"));
                jTextField4.setText(rs.getString("Address"));
            }
            else
            {
                JOptionPane.showMessageDialog(null,"There is no entry which is matching the keyword,Please Try Again !");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
            }
            
           
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
         String Contact_no=jTextField2.getText();
        String query="Select * from buyer where contact like ? ";
        try
        {
            Connection con=ConnectionProvider.getcon();
            PreparedStatement pst=con.prepareStatement(query);
            pst.setString(1,Contact_no+ "%" );
            ResultSet rs=pst.executeQuery();
            if(rs.next())
            {
                jTextField1.setText(rs.getString("Name"));
                jTextField2.setText(rs.getString("contact"));
                jTextField3.setText(rs.getString("Email"));
                jTextField4.setText(rs.getString("Address"));
            }
            else
            {
                JOptionPane.showMessageDialog(null,"There is no entry which is matching the keyword,Please Try Again !");
                jTextField1.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
            }
            
           
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {
        String pidText = jTextField9.getText().trim();

        if (pidText.isEmpty()) {
            return;
        }

        try {
            int pid = Integer.parseInt(pidText);

            String query = "SELECT pid, pname, price, quantity, description FROM product WHERE pid = ?";
            Connection con = ConnectionProvider.getcon();
            PreparedStatement pst = con.prepareStatement(query);
            pst.setInt(1, pid);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                int stockQuantity = rs.getInt("quantity");

                if (stockQuantity > 0) {
                    jTextField10.setText(rs.getString("pname"));
                    jTextField11.setText(rs.getString("price"));
                    jTextField12.setText(rs.getString("description"));

                    // Enable fields
                    jTextField11.setEditable(false);
                    jTextField12.setEditable(false);
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Product '" + rs.getString("pname") + "' is out of stock!");
                    clearProductFields();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Product not found with ID: " + pid);
                clearProductFields();
            }

            rs.close();
            pst.close();
            con.close();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid Product ID (number)");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
            e.printStackTrace();
        }
    }


    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
         String pname=jTextField10.getText();
        String query="Select * from product where pname like ? ";
        try
        {
            Connection con=ConnectionProvider.getcon();
            PreparedStatement pst=con.prepareStatement(query);
            pst.setString(1,"%" + pname + "%" );
            ResultSet rs=pst.executeQuery();
            if(rs.next())
            {
                if(parseInt(rs.getString(4))>0)
                {
                    jTextField9.setText(rs.getString(1));
                    jTextField10.setText(rs.getString(2));
                    jTextField11.setText(rs.getString(3));
                    jTextField12.setText(rs.getString(5));
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Product " + rs.getString(2)+" is out of stock!");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"There is no entry which is matching the keyword,Please Try Again !");
                jTextField9.setText("");
                jTextField11.setText("");
                jTextField12.setText("");
            }
            
           
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        String query1="select concat(day(now()),'-',month(now()),'-',year(now())) as date;";
        String query2="Select time(now())";
        try
        {
            Connection con=ConnectionProvider.getcon();
            Statement st=con.createStatement();
            ResultSet rs1=st.executeQuery(query1);
            if(rs1.next())
            {
                jLabel4.setText(rs1.getString(1));
            }
            ResultSet rs2=st.executeQuery(query2);
            if(rs2.next())
            {
                jLabel6.setText(rs2.getString(1));
            }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_formComponentShown

    private void jTextField13FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField13FocusGained
        // TODO add your handling code here:
        if(jTextField13.getText().equals("Enter Buying Quantity"))
        {
            jTextField13.setText("");
            jTextField13.setForeground(new Color(0,0,0));
            
        }
    }//GEN-LAST:event_jTextField13FocusGained

    private void jTextField13FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField13FocusLost
        // TODO add your handling code here:
        if(jTextField13.getText().equals(""))
        {
            jTextField13.setForeground(new Color(153,153,153));
            jTextField13.setText("Enter Buying Quantity");
            
        }
    }//GEN-LAST:event_jTextField13FocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // Validate required fields
        if (jTextField1.getText().trim().isEmpty() || jTextField2.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter buyer name and contact number");
            return;
        }

        if (jTable1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Please add at least one product to the bill");
            return;
        }

        String paidText = jTextField6.getText().trim();
        if (paidText.isEmpty() || paidText.equals("Enter the Amount Paid")) {
            JOptionPane.showMessageDialog(null, "Please enter amount paid");
            return;
        }

        int confirmation = JOptionPane.showConfirmDialog(null,
                "Do you want to save the bill?", "Bill Confirmation", JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            Connection con = null;
            try {
                con = ConnectionProvider.getcon();
                con.setAutoCommit(false); // Start transaction

                // Get buyer ID
                String buyerQuery = "SELECT id FROM buyer WHERE contact = ?";
                PreparedStatement buyerPst = con.prepareStatement(buyerQuery);
                buyerPst.setString(1, jTextField2.getText().trim());
                ResultSet buyerRs = buyerPst.executeQuery();

                int buyerId = 0;
                if (buyerRs.next()) {
                    buyerId = buyerRs.getInt("id");
                } else {
                    JOptionPane.showMessageDialog(null, "Buyer not found in database");
                    return;
                }

                // Save billing records and update stock
                String billingQuery = "INSERT INTO billing(Bid, Pid, p_quantity) VALUES (?, ?, ?)";
                String stockUpdateQuery = "UPDATE product SET quantity = quantity - ? WHERE pid = ?";

                PreparedStatement billingPst = con.prepareStatement(billingQuery);
                PreparedStatement stockPst = con.prepareStatement(stockUpdateQuery);

                // Process each item
                Queue<Integer> tempPidQueue = new LinkedList<>(arrpid);
                Queue<Integer> tempQuantityQueue = new LinkedList<>(arrquantity);

                while (!tempPidQueue.isEmpty() && !tempQuantityQueue.isEmpty()) {
                    int pid = tempPidQueue.poll();
                    int quantity = tempQuantityQueue.poll();

                    // Insert billing record
                    billingPst.setInt(1, buyerId);
                    billingPst.setInt(2, pid);
                    billingPst.setInt(3, quantity);
                    billingPst.executeUpdate();

                    // Update stock
                    stockPst.setInt(1, quantity);
                    stockPst.setInt(2, pid);
                    stockPst.executeUpdate();
                }

                con.commit(); // Commit transaction

                // Generate PDF
                generatePDF();

                JOptionPane.showMessageDialog(null, "Bill saved successfully!");

                // Reset form
                this.setVisible(false);
                new billing().setVisible(true);

            } catch (Exception e) {
                try {
                    if (con != null) con.rollback(); // Rollback on error
                } catch (Exception rollbackEx) {
                    rollbackEx.printStackTrace();
                }
                JOptionPane.showMessageDialog(null, "Error saving bill: " + e.getMessage());
                e.printStackTrace();
            } finally {
                try {
                    if (con != null) {
                        con.setAutoCommit(true);
                        con.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void generatePDF() {
        try {
            String name = jTextField1.getText().trim();
            String date = jLabel4.getText();

            // Create Bills directory if it doesn't exist
            String billsDir = System.getProperty("user.home") + File.separator + "Bills";
            File dir = new File(billsDir);
            if (!dir.exists()) {
                dir.mkdirs();
            }

            String path = billsDir + File.separator + name + "_" + date.replace("-", "_") + ".pdf";

            com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
            PdfWriter.getInstance(doc, new FileOutputStream(path));
            doc.open();

            // Header
            Paragraph header = new Paragraph("BILLING INVOICE\n\n");
            header.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
            doc.add(header);

            // Date and Time
            Paragraph dateTime = new Paragraph("Date: " + jLabel4.getText() + "   Time: " + jLabel6.getText() + "\n\n");
            doc.add(dateTime);

            // Buyer Details
            Paragraph buyerDetails = new Paragraph(
                    "BUYER DETAILS:\n" +
                            "Name: " + jTextField1.getText() + "\n" +
                            "Contact: " + jTextField2.getText() + "\n" +
                            "Email: " + jTextField3.getText() + "\n" +
                            "Address: " + jTextField4.getText() + "\n\n"
            );
            doc.add(buyerDetails);

            // Invoice Table
            PdfPTable table = new PdfPTable(5);
            table.setWidthPercentage(100);
            table.addCell("Product Name");
            table.addCell("Price");
            table.addCell("Description");
            table.addCell("Quantity");
            table.addCell("Total");

            for (int i = 0; i < jTable1.getRowCount(); i++) {
                table.addCell(jTable1.getValueAt(i, 0).toString());
                table.addCell(jTable1.getValueAt(i, 1).toString());
                table.addCell(jTable1.getValueAt(i, 2).toString());
                table.addCell(jTable1.getValueAt(i, 3).toString());
                table.addCell(jTable1.getValueAt(i, 4).toString());
            }
            doc.add(table);

            // Totals
            Paragraph totals = new Paragraph(
                    "\nInvoice Total: Rs. " + jTextField5.getText() + "\n" +
                            "Amount Paid: Rs. " + jTextField6.getText() + "\n" +
                            "Change Returned: Rs. " + jTextField7.getText() + "\n\n"
            );
            doc.add(totals);

            // Footer
            Paragraph footer = new Paragraph("Thank you for your business!");
            footer.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
            doc.add(footer);

            doc.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error generating PDF: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String paidText = jTextField6.getText().trim();
            if (paidText.isEmpty() || paidText.equals("Enter the Amount Paid")) {
                JOptionPane.showMessageDialog(null, "Please enter amount paid");
                return;
            }

            int paidAmount = Integer.parseInt(paidText);

            if (paidAmount >= finaltotal) {
                int changeAmount = paidAmount - finaltotal;
                jTextField7.setText(String.valueOf(changeAmount));
            } else {
                JOptionPane.showMessageDialog(null,
                        "Amount paid (" + paidAmount + ") is less than invoice total (" + finaltotal + ")!");
                jTextField7.setText("0");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid amount");
        }
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField6FocusGained
        // TODO add your handling code here:
        if(jTextField6.getText().equals("Enter the Amount Paid"))
        {
            jTextField6.setText("");
            jTextField6.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_jTextField6FocusGained

    private void jTextField6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField6FocusLost
        // TODO add your handling code here:
        if(jTextField6.getText().equals(""))
        {
            jTextField6.setForeground(new Color(153,153,153));
            jTextField6.setText("Enter the Amount Paid");
        }
    }//GEN-LAST:event_jTextField6FocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new billing().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new billing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
